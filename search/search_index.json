{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"1_inicio/","title":"\ud83c\udf4d Informa\u00e7\u00f5es sobre o Projeto","text":""},{"location":"1_inicio/#-resumo-do-processo-de-extracao-e-armazenamento-de-dados","title":"- Resumo do Processo de Extra\u00e7\u00e3o e Armazenamento de Dados","text":""},{"location":"1_inicio/#1-explicacao-geral","title":"1. Explica\u00e7\u00e3o Geral","text":"<p>Este projeto tem como objetivo consumir o Endpoint Owner da API da AVANTIO, processar os dados e armazen\u00e1-los em um banco de dados PostgreSQL. O sistema \u00e9 composto por uma pipeline que realiza a extra\u00e7\u00e3o de dados a partir do Endpoint da API da AVANTIO, faz o tratamento e o armazenamento desses dados em uma tabela no banco de dados PostgreSQL. A seguir est\u00e3o detalhados os passos do processo.</p>"},{"location":"1_inicio/#2-consumo-dos-dados-da-api","title":"2. Consumo dos Dados da API","text":""},{"location":"1_inicio/#classe-api_owners","title":"Classe API_Owners","text":"<p>A classe API_Owners, localizada no arquivo <code>./src/API/classes_model.py</code>, \u00e9 respons\u00e1vel por realizar as requisi\u00e7\u00f5es ao Endpoint da API. Ela inst\u00e2ncia a conex\u00e3o necess\u00e1ria e executa o processo de extra\u00e7\u00e3o dos dados.</p>"},{"location":"1_inicio/#funcao-request_data","title":"Fun\u00e7\u00e3o request_data","text":"<p>A fun\u00e7\u00e3o request_data, que est\u00e1 localizada em <code>./src/API/raw_data.py</code>, realiza a requisi\u00e7\u00e3o dos dados, obtendo a resposta da API em formato JSON. </p>"},{"location":"1_inicio/#3-tratamento-e-ordenamento-dos-dados","title":"3. Tratamento e Ordenamento dos Dados","text":""},{"location":"1_inicio/#classe-owners","title":"Classe Owners","text":"<p>A classe Owners, que tamb\u00e9m est\u00e1 em <code>./src/API/classes_model.py</code>, inst\u00e2ncia o objeto <code>Owner</code> e cont\u00e9m m\u00e9todos para manipula\u00e7\u00e3o e filtragem dos dados extra\u00eddos. Ela organiza e prepara os dados conforme as necessidades do banco de dados.</p>"},{"location":"1_inicio/#filtragem-da-resposta-da-api","title":"Filtragem da Resposta da API","text":"<p>Ap\u00f3s a extra\u00e7\u00e3o dos dados da API, a resposta em JSON \u00e9 filtrada e organizada na pasta <code>./src/API/data_model.py</code>. Aqui, \u00e9 feito o tratamento dos dados para que estejam prontos para o envio ao banco de dados.</p>"},{"location":"1_inicio/#4-criacao-e-atualizacao-do-banco-de-dados","title":"4. Cria\u00e7\u00e3o e Atualiza\u00e7\u00e3o do Banco de Dados","text":""},{"location":"1_inicio/#conexao-e-sessao-com-o-banco-de-dados","title":"Conex\u00e3o e Sess\u00e3o com o Banco de Dados","text":"<p>Na pasta Database, \u00e9 configurada a conex\u00e3o com o banco de dados PostgreSQL. A conex\u00e3o \u00e9 criada e a sess\u00e3o \u00e9 gerida no arquivo <code>./src/Database/database.py</code>.</p>"},{"location":"1_inicio/#modelo-do-banco-de-dados","title":"Modelo do Banco de Dados","text":"<p>O modelo da tabela <code>Proprietarios</code> \u00e9 definido no arquivo <code>./src/Database/models.py</code>. Esta tabela \u00e9 onde os dados dos propriet\u00e1rios ser\u00e3o armazenados no banco de dados.</p>"},{"location":"1_inicio/#5-envio-dos-dados-ao-banco-de-dados","title":"5. Envio dos Dados ao Banco de Dados","text":"<p>Os dados processados e organizados s\u00e3o enviados ao banco de dados no arquivo <code>./src/Fetch/commit.py</code>. Este script realiza a inser\u00e7\u00e3o ou atualiza\u00e7\u00e3o dos dados na tabela <code>Proprietarios</code>.</p>"},{"location":"1_inicio/#6-execucao-do-projeto","title":"6. Execu\u00e7\u00e3o do Projeto","text":"<p>O arquivo principal <code>./src/main.py</code> \u00e9 respons\u00e1vel por orquestrar todo o processo. Ao executar o comando:</p> <pre><code>python main.py\n</code></pre>"},{"location":"1_inicio/#-esquema-do-banco","title":"-\ud83d\udee2\ufe0f Esquema do Banco","text":"<pre><code>erDiagram\n    OWNER {\n        string ID_Proprietario PK \"Identificador \u00fanico do propriet\u00e1rio\"\n        string Nome_e_Sobrenome \"Nome completo do propriet\u00e1rio\"\n        string Documento_de_Identificacao \"N\u00famero do documento(CPF)\"\n        string Telefone \"Contato telef\u00f4nico\"\n        string Email \"Endere\u00e7o de e-mail\"\n    }\n</code></pre>"},{"location":"2_index/","title":"\ud83c\udf4dComandos e Estrutura do Projeto","text":""},{"location":"2_index/#comandos-uteis","title":"\ud83d\ude80 Comandos \u00dateis","text":"<p>Abaixo est\u00e3o os principais comandos para configurar e executar o projeto:</p> <pre><code># Clonar o reposit\u00f3rio\ngit clone [repositorio]\n\n# Acessar o diret\u00f3rio do reposit\u00f3rio\ncd ./[repositorio]\n\n# Criar o arquivo de configura\u00e7\u00e3o das vari\u00e1veis\ntouch .env\n\n# Executar a extra\u00e7\u00e3o e envio de dados para o banco de dados\ndocker compose up --build\n</code></pre>"},{"location":"2_index/#estrutura-de-pastas-do-projeto","title":"\ud83d\udcc2 Estrutura de Pastas do Projeto","text":"<p>A estrutura do projeto \u00e9 organizada da seguinte maneira:</p> <pre><code>src/\n\u2502\u2500\u2500 API/\n\u2502   \u251c\u2500\u2500 classes_model.py  # Classes necess\u00e1rias para o projeto.\n\u2502   \u251c\u2500\u2500 data_model.py      # Extra\u00e7\u00e3o do Raw_data e cria\u00e7\u00e3o da tabela.\n\u2502   \u251c\u2500\u2500 raw_data/         # Diret\u00f3rio contendo os dados extra\u00eddos da API em JSON.\n\u2502\n\u2502\u2500\u2500 Database/\n\u2502   \u251c\u2500\u2500 database.py       # Configura\u00e7\u00e3o da conex\u00e3o e sess\u00e3o de acesso ao banco de dados.\n\u2502   \u251c\u2500\u2500 models.py         # Defini\u00e7\u00e3o das tabelas do banco de dados.\n\u2502\n\u2502\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 index.md          # Documenta\u00e7\u00e3o do projeto.\n\u2502\n\u2502\u2500\u2500 Fetch/\n\u2502   \u251c\u2500\u2500 commit.py         # Fun\u00e7\u00e3o para envio dos dados para o banco de dados.\n</code></pre> <p>\ud83d\udca1 Dicas: - Certifique-se de configurar corretamente o arquivo <code>.env</code> antes de rodar o projeto. - Para visualizar a documenta\u00e7\u00e3o localmente, utilize <code>mkdocs serve</code>.</p>"}]}